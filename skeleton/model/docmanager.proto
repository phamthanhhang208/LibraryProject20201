syntax = "proto3";

package model;
option go_package = "github.com/pinezapple/LibraryProject20201/skeleton/model/docmanagerModel";
//option go_package = "skeleton/model";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/pinezapple/LibraryProject20201/skeleton/model/time.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = false;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

service Docmanager {
	rpc SelectAllDoc (SelectAllDocReq) returns (SelectAllDocResp) {}
	rpc SelectDocByID (SelectDocByIDReq) returns (SelectDocByIDResp) {}
	rpc SaveDoc (SaveDocReq) returns (SaveDocResp) {}
	rpc UpdateDoc (UpdateDocReq) returns (UpdateDocResp) {}
	rpc DeleteDoc (DeleteDocReq) returns (DeleteDocResp) {}

	//------------------------------ Borrow Form ------------------------------
	rpc SaveBorrowForm (SaveBorrowFormReq) returns (SaveBorrowFormResp) {}
	rpc UpdateBorrowFormStatus (UpdateBorrowFormStatusReq) returns (UpdateBorrowFormStatusResp) {}
	rpc SelectBorrowFormByID (SelectBorrowFormByIDReq) returns (SelectBorrowFormByIDResp) {}	
}

message Doc {
	uint64 ID = 1 [(gogoproto.jsontag) = "id_doc", (gogoproto.moretags) = "db:\"id_doc\""];	
	string Name = 2 [(gogoproto.jsontag) = "doc_name", (gogoproto.moretags) = "db:\"doc_name\""];
	string Author = 3 [(gogoproto.jsontag) = "doc_author", (gogoproto.moretags) = "db:\"doc_author\""];
	string Type = 4 [(gogoproto.jsontag) = "doc_type", (gogoproto.moretags) = "db:\"doc_type\""];
	string Description = 5 [(gogoproto.jsontag) = "doc_description", (gogoproto.moretags) = "db:\"doc_description\""];
 	uint32 Status = 6 [(gogoproto.jsontag) = "status", (gogoproto.moretags) = "db:\"status\""];
	uint64 BorrowFormID = 7 [(gogoproto.jsontag) = "id_borrow", (gogoproto.moretags) = "db:\"id_borrow\""];
	uint32 Fee = 8 [(gogoproto.jsontag) = "fee", (gogoproto.moretags) = "db:\"fee\""];
	model.Time Created_at = 9 [(gogoproto.jsontag) = "created_at", (gogoproto.moretags) = "db:\"created_at\""];
	model.Time Updated_at = 10 [(gogoproto.jsontag) = "updated_at", (gogoproto.moretags) = "db:\"updated_at\""];
}

message BorrowForm {
	uint64 ID = 1 [(gogoproto.jsontag) = "id_borrow", (gogoproto.moretags) = "db:\"id_borrow\""];
	uint64 DocID = 2 [(gogoproto.jsontag) = "id_doc", (gogoproto.moretags) = "db:\"id_doc\""];	
	uint64 CusID = 3 [(gogoproto.jsontag) = "id_cus", (gogoproto.moretags) = "db:\"id_cus\""];	
	uint64 LibID = 4 [(gogoproto.jsontag) = "id_lib", (gogoproto.moretags) = "db:\"id_lib\""];	
	int32  Status = 5 [(gogoproto.jsontag) = "status", (gogoproto.moretags) = "db:\"status\""];
	model.Time Created_at = 6 [(gogoproto.jsontag) = "created_at", (gogoproto.moretags) = "db:\"created_at\""];
	model.Time Updated_at = 7 [(gogoproto.jsontag) = "updated_at", (gogoproto.moretags) = "db:\"updated_at\""];
}

message SelectAllDocReq {
}

message SelectAllDocResp {
	int32 code = 1;
	string message = 2;
	repeated Doc documents = 3 [(gogoproto.nullable) = true];
}

message SelectDocByIDReq {
	uint64 docID = 1;
}

message SelectDocByIDResp {
	int32 code = 1;
	string message = 2;
	Doc documents = 3 [(gogoproto.nullable) = true];
}

message SaveDocReq {
	Doc doc = 1;
}

message SaveDocResp {
	int32 code = 1;
	string message = 2;
}

message UpdateDocReq {
	Doc doc = 1;
}

message UpdateDocResp {
	int32 code = 1;
	string message = 2;
}

message DeleteDocReq {
	uint64 docID = 1;
}

message DeleteDocResp {
	int32 code = 1;
	string message = 2;
}

//---------------------------------------------------- Borrow Form--------------------------------

message SaveBorrowFormReq {
	BorrowForm borrowform = 1;
}

message SaveBorrowFormResp {
	int32 code = 1;
	string message = 2;
}

message UpdateBorrowFormStatusReq {
	uint64 formID = 1;
	int32 status = 2;
}

message UpdateBorrowFormStatusResp {
	int32 code = 1;
	string message = 2;
}

message SelectBorrowFormByIDReq {
	uint64 formID = 1;
}

message SelectBorrowFormByIDResp {
	BorrowForm borrowform = 1;
        int32 code = 2;
	string message = 3;
}

